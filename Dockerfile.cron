# Dockerfile for Railway Cron Jobs
FROM python:3.11-slim

# Install system dependencies for Selenium
RUN apt-get update && apt-get install -y \
    wget \
    gnupg \
    unzip \
    curl \
    xvfb \
    libnss3 \
    libnspr4 \
    libatk-bridge2.0-0 \
    libdrm2 \
    libxkbcommon0 \
    libxcomposite1 \
    libxdamage1 \
    libxrandr2 \
    libgbm1 \
    libxss1 \
    libasound2 \
    libatspi2.0-0 \
    libgtk-3-0 \
    && rm -rf /var/lib/apt/lists/*

# Install Chrome with more specific version for stability
RUN wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add - \
    && echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list \
    && apt-get update \
    && apt-get install -y google-chrome-stable \
    && rm -rf /var/lib/apt/lists/*

# Create a simple Chrome test to verify installation
RUN google-chrome --version || echo "Chrome installation check failed"

# Install matching ChromeDriver using Chrome for Testing (current method)
RUN CHROME_VERSION=$(google-chrome --version | awk '{print $3}') && \
    echo "Full Chrome version: ${CHROME_VERSION}" && \
    CHROMEDRIVER_URL="https://storage.googleapis.com/chrome-for-testing-public/${CHROME_VERSION}/linux64/chromedriver-linux64.zip" && \
    echo "Downloading ChromeDriver from: ${CHROMEDRIVER_URL}" && \
    (wget -O /tmp/chromedriver.zip "${CHROMEDRIVER_URL}" && \
     unzip /tmp/chromedriver.zip -d /tmp/ && \
     mv /tmp/chromedriver-linux64/chromedriver /usr/local/bin/chromedriver) || \
    (echo "Exact version not found, trying major version..." && \
     MAJOR_VERSION=$(echo ${CHROME_VERSION} | cut -d'.' -f1) && \
     CHROMEDRIVER_URL_MAJOR="https://storage.googleapis.com/chrome-for-testing-public/${MAJOR_VERSION}.0.0.0/linux64/chromedriver-linux64.zip" && \
     echo "Trying major version URL: ${CHROMEDRIVER_URL_MAJOR}" && \
     wget -O /tmp/chromedriver.zip "${CHROMEDRIVER_URL_MAJOR}" && \
     unzip /tmp/chromedriver.zip -d /tmp/ && \
     mv /tmp/chromedriver-linux64/chromedriver /usr/local/bin/chromedriver) && \
    chmod +x /usr/local/bin/chromedriver && \
    rm -rf /tmp/chromedriver* && \
    chromedriver --version && \
    echo "ChromeDriver installation completed successfully"

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY backend/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy backend code
COPY backend/ .

# Set environment for headless Chrome
ENV DISPLAY=:99
ENV CHROME_BIN=/usr/bin/google-chrome
ENV CHROME_PATH=/usr/bin/google-chrome

# Create a startup script to ensure Chrome works properly
RUN echo '#!/bin/bash\n\
echo "=== Railway Chrome Container Starting ==="\n\
echo "Chrome binary: $(which google-chrome)"\n\
echo "ChromeDriver binary: $(which chromedriver)"\n\
echo "Chrome version: $(google-chrome --version)"\n\
echo "ChromeDriver version: $(chromedriver --version)"\n\
CHROME_VERSION=$(google-chrome --version | awk "{print \\$3}" | cut -d. -f1)\n\
CHROMEDRIVER_VERSION=$(chromedriver --version | awk "{print \\$2}" | cut -d. -f1)\n\
echo "Chrome major version: ${CHROME_VERSION}"\n\
echo "ChromeDriver major version: ${CHROMEDRIVER_VERSION}"\n\
if [ "${CHROME_VERSION}" = "${CHROMEDRIVER_VERSION}" ]; then\n\
    echo "✓ Version compatibility: GOOD"\n\
else\n\
    echo "⚠ Version compatibility: MISMATCH (may cause issues)"\n\
fi\n\
echo "=== Starting Python cron script ==="\n\
exec python railway_cron.py\n\
' > /app/start.sh && chmod +x /app/start.sh

# Make the cron script executable
RUN chmod +x railway_cron.py

# Default command (will be overridden by Railway)
CMD ["/app/start.sh"]